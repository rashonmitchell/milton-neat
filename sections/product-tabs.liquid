{%- liquid
	assign section_id = '#shopify-section-' | append: section.id
	assign full       = section.settings.full
-%}

<style>
	{{ section_id }} {
		padding-top: {{ section.settings.padding_top_mobile }}px;
		padding-bottom: {{ section.settings.padding_bottom_mobile }}px;
	}

	{{ section_id }} .tabs-head-mobile .dropdown-content {
		font-size: 2.6rem;
	}

	{{ section_id }} .tabs-head {
		font-size: {{ section.settings.head_font_size }}px;
		line-height: {{ section.settings.head_line_height }};
		margin-bottom: {{ section.settings.head_padding_bottom | times: 0.85 }}px;
	}

	@media (min-width: 992px) {
		{{ section_id }} {
			padding-top: {{ section.settings.padding_top }}px;
			padding-bottom: {{ section.settings.padding_bottom }}px;
		}

		{{ section_id }} .tabs-head {
			margin-bottom: {{ section.settings.head_padding_bottom }}px;
			justify-content: {{ section.settings.text_align }};
		}
	}
</style>

{%- if section.blocks.size > 0 -%}
	<div class="{% if full %}stretch-section stretch-padding{% else %}container{% endif %}">
		<div class="product-tabs tabs">
			<div class="tabs-head">
				<div class="tabs-head-desktop">
					{%- for block in section.blocks -%}
						<span class="tab-head{% if forloop.index == 1 %} active{% endif %}" data-index="{{ forloop.index }}" {{ block.shopify_attributes }}{% if request.design_mode %} data-id="{{ block.id }}"{% endif %}>
							{%- liquid
								assign collection = block.settings.collection

								if block.settings.name != blank
									echo block.settings.name | escape
								elsif collection != blank
									echo collection.title
								else
									echo 'general.text.tab' | t | append: ' ' | append: forloop.index
								endif
							-%}
						</span>
					{%- endfor -%}
				</div>

				<div class="toggle-dropdown tabs-head-mobile">
					<div class="dropdown-summary">
						<span class="summary-info">
							{%- liquid
								for block in section.blocks limit: 1
									assign collection = block.settings.collection

									if block.settings.name != blank
										echo block.settings.name | escape
									elsif collection != blank
										echo collection.title
									else
										echo 'general.text.tab' | t | append: ' ' | append: forloop.index
									endif
								endfor
							-%}
						</span>

						{%- render 'icon', code: 'chevron-down' -%}
					</div>

					<div class="dropdown-content" role="list">
						<div class="dropdown-content-inner">
							<header class="dropdown-content-header">
								<span class="dropdown-content-title">
									{%- liquid
										for block in section.blocks limit: 1
											assign collection = block.settings.collection

											if block.settings.name != blank
												echo block.settings.name | escape
											elsif collection != blank
												echo collection.title
											else
												echo 'general.text.tab' | t | append: ' ' | append: forloop.index
											endif
										endfor
									-%}
								</span>

								{%- render 'icon', code: 'chevron-down' -%}
							</header>

							<ul class="content" role="list">
								{%- for block in section.blocks -%}
									{%- liquid
										assign collection = block.settings.collection

										if block.settings.name != blank
											assign name = block.settings.name | escape
										elsif collection != blank
											assign name = collection.title
										else
											assign name = 'general.text.tab' | t | append: ' ' | append: forloop.index
										endif
									-%}

									<li class="dropdown-item" data-value="{{ name }}" data-index="{{ forloop.index }}">{{- name -}}</li>
								{%- endfor -%}
							</ul>
						</div>
					</div>
				</div>
			</div>

			<div class="tabs-content{% if section.settings.animation != 'none' %} animation-{{ section.settings.animation }}{% endif %}">
				{%- for block in section.blocks -%}
					<ul class="tab-content grid grid-{{ block.settings.columns }} grid-tablet-3 grid-mobile-2{% if forloop.index == 1 %} active{% endif %}" role="list" data-index="{{ forloop.index }}">
						{%- liquid
							assign collection = block.settings.collection
							assign total      = block.settings.rows | times: block.settings.columns
						-%}

						{%- for product in collection.products limit: total -%}
							<li class="grid-item">
								{%- render 'product-card', product: product -%}
							</li>
						{%- else -%}
							{%- for i in (1..total) -%}
								{%- liquid
									capture index
										cycle 1, 2, 3, 4, 5, 6
									endcapture
								-%}

								<li class="grid-item">
									{%- render 'product-card-placeholder', index: index -%}
								</li>
							{%- endfor -%}
						{%- endfor -%}
					</ul>
				{%- endfor -%}
			</div>
		</div>

		{%- if section.settings.button_label != blank -%}
			<div class="button-wrap">
				<a class="button primary-button small-button" href="{{ section.settings.button_url | default: '#' }}">{{- section.settings.button_label | escape -}}</a>
			</div>
		{%- endif -%}
	</div>
{%- endif -%}

{% schema %}
{
	"name": "t:sections.product-tabs.name",
	"tag": "section",
	"class": "product-tabs-section",
	"disabled_on": {
		"groups": ["header", "footer"]
	},
	"settings": [
		{
			"type": "header",
			"content": "t:sections.product-tabs.settings.header_head.content"
		},
		{
			"type": "select",
			"id": "text_align",
			"options": [
				{
					"value": "left",
					"label": "t:general.layout.alignment.option_1.label"
				},
				{
					"value": "center",
					"label": "t:general.layout.alignment.option_2.label"
				},
				{
					"value": "right",
					"label": "t:general.layout.alignment.option_3.label"
				}
			],
			"default": "left",
			"label": "t:general.layout.alignment.label",
			"info": "t:general.layout.alignment.mobile_center.label"
		},
		{
			"type": "range",
			"min": 10,
			"max": 100,
			"step": 1,
			"default": 36,
			"unit": "px",
			"id": "head_font_size",
			"label": "t:sections.product-tabs.settings.font_size.label"
		},
		{
			"type": "range",
			"min": 0,
			"max": 10,
			"step": 0.1,
			"default": 1,
			"id": "head_line_height",
			"label": "t:sections.product-tabs.settings.line_height.label"
		},
		{
			"type": "range",
			"min": 0,
			"max": 100,
			"step": 1,
			"default": 47,
			"unit": "px",
			"id": "head_padding_bottom",
			"label": "t:sections.product-tabs.settings.head_padding_bottom.label"
		},
		{
			"type": "header",
			"content": "t:sections.product-tabs.settings.header_content.content"
		},
		{
			"type": "select",
			"id": "animation",
			"options": [
				{
					"value": "none",
					"label": "t:sections.product-tabs.settings.animation.option_1.label"
				},
				{
					"value": "up",
					"label": "t:sections.product-tabs.settings.animation.option_2.label"
				},
				{
					"value": "down",
					"label": "t:sections.product-tabs.settings.animation.option_3.label"
				}
			],
			"default": "none",
			"label": "t:sections.product-tabs.settings.animation.label"
		},
		{
			"type": "header",
			"content": "t:sections.product-tabs.settings.header_button.content"
		},
		{
			"type": "text",
			"id": "button_label",
			"label": "t:sections.product-tabs.settings.button_label.label"
		},
		{
			"type": "url",
			"id": "button_url",
			"label": "t:sections.product-tabs.settings.button_url.label"
		},
		{
			"type": "header",
			"content": "t:general.padding.header_padding.content"
		},
		{
			"type": "range",
			"id": "padding_top",
			"min": 0,
			"max": 100,
			"step": 1,
			"default": 50,
			"unit": "px",
			"label": "t:general.padding.top.label"
		},
		{
			"type": "range",
			"id": "padding_bottom",
			"min": 0,
			"max": 100,
			"step": 1,
			"default": 50,
			"unit": "px",
			"label": "t:general.padding.bottom.label"
		},
		{
			"type": "paragraph",
			"content": "t:general.padding.paragraph_mobile.content"
		},
		{
			"type": "range",
			"id": "padding_top_mobile",
			"min": 0,
			"max": 100,
			"step": 1,
			"default": 20,
			"unit": "px",
			"label": "t:general.padding.top.label"
		},
		{
			"type": "range",
			"id": "padding_bottom_mobile",
			"min": 0,
			"max": 100,
			"step": 1,
			"default": 20,
			"unit": "px",
			"label": "t:general.padding.bottom.label"
		}
	],
	"blocks": [
		{
			"type": "tab",
			"name": "t:sections.product-tabs.blocks.tab.name",
			"settings": [
				{
					"type": "text",
					"id": "name",
					"label": "t:sections.product-tabs.blocks.tab.settings.name.label"
				},
				{
					"type": "range",
					"id": "columns",
					"min": 2,
					"max": 6,
					"step": 1,
					"default": 3,
					"label": "t:sections.product-tabs.blocks.tab.settings.columns.label"
				},
				{
					"type": "range",
					"id": "rows",
					"min": 1,
					"max": 6,
					"step": 1,
					"default": 1,
					"label": "t:sections.product-tabs.blocks.tab.settings.rows.label"
				},
				{
					"type": "collection",
					"id": "collection",
					"label": "t:sections.product-tabs.blocks.tab.settings.collection.label"
				}
			]
		}
	],
	"presets": [
		{
			"name": "t:sections.product-tabs.presets.name",
			"blocks": [
				{
					"type": "tab",
					"settings": {
						"name": "Tab 1"
					}
				},
				{
					"type": "tab",
					"settings": {
						"name": "Tab 2"
					}
				}
			]
		}
	]
}
{% endschema %}
