{%- liquid
	assign section_id       = '#shopify-section-' | append: section.id
	assign full             = section.settings.full
	assign heading          = section.settings.heading_text
	assign sub_heading      = section.settings.sub_heading_text
	assign heading_size     = section.settings.heading_font_size
	assign sub_heading_size = section.settings.sub_heading_font_size
	assign button           = section.settings.button_text
	assign button_bg        = section.settings.button_bg_color
	assign button_color     = section.settings.button_color
-%}

<style>
	{{ section_id }} .section-wrapper {
		padding-top: {{ section.settings.padding_top_mobile }}px;
		padding-bottom: {{ section.settings.padding_bottom_mobile }}px;
	}

	{{ section_id }} .collection-list-button {
		{%- if button_bg != blank -%}
			background-color: {{ button_bg }};
		{%- endif -%}

		{%- if button_color != blank -%}
			color: {{ button_color }};
		{%- endif -%}
	}

	{%- if button_color != blank -%}
		{{ section_id }} .collection-list-button:before {
			background: linear-gradient(to right,rgba(255,255,255,0) 0%,{{ button_color | color_modify: 'alpha', 0.3 }} 100%);
		}
	{%- endif -%}

	{%- if sub_heading != blank -%}
		{%- liquid
			assign sub_heading_size_mobile = sub_heading_size

			if sub_heading_size > 30
				assign sub_heading_size_mobile = 22
			elsif sub_heading_size > 20
				assign sub_heading_size_mobile = sub_heading_size | times: 0.8
			endif
		-%}

		{{ section_id }} .sub-heading {
			font-size: {{ sub_heading_size_mobile }}px;
		}
	{%- endif -%}

	{%- if heading != blank -%}
		{%- liquid
			assign heading_size_mobile = heading_size

			if heading_size > 30
				assign heading_size_mobile = 26
			elsif heading_size > 20
				assign heading_size_mobile = heading_size | times: 0.8
			endif
		-%}

		{{ section_id }} .heading {
			font-size: {{ heading_size_mobile }}px;
		}
	{%- endif -%}

	@media (min-width: 992px) {
		{{ section_id }} .section-wrapper {
			padding-top: {{ section.settings.padding_top }}px;
			padding-bottom: {{ section.settings.padding_bottom }}px;
		}

		{{ section_id }} .first-item {
			width: {{ 100 | minus: section.settings.width }}%;
		}

		{{ section_id }} .second-item {
			width: {{ section.settings.width }}%;
		}

		{{ section_id }} .heading-box {
			margin-top: {{ section.settings.section_margin_top }}px;
			top: {{ section.settings.section_margin_top }}px;
		}

		{%- if heading != blank -%}
			{{ section_id }} .heading {
				font-size: {{ heading_size }}px;
			}
		{%- endif -%}

		{%- if sub_heading != blank -%}
			{{ section_id }} .sub-heading {
				font-size: {{ sub_heading_size }}px;
			}
		{%- endif -%}

		{%- if button != blank -%}
			{{ section_id }} .heading-box .button {
				font-size: {{ section.settings.button_font_size }}px;
			}
		{%- endif -%}
	}
</style>

<div class="section-wrapper color-{{ section.settings.color_scheme }}">
	<div class="{% if full %}stretch-section stretch-padding{% else %}container{% endif %} collection-sticky" data-id="{{ section.settings.layout }}">
		<div class="grid grid-2">
			<div class="grid-item first-item">
				<div class="heading-box heading-color">
					{%- if sub_heading != blank -%}
						<div class="sub-heading rte">{{- sub_heading | replace: '[', '<span class="dynamic-label">' | replace: ']', '</span>' -}}</div>
					{%- endif -%}

					{%- if heading != blank -%}
						<div class="heading rte">{{- heading | replace: '[', '<span class="dynamic-label">' | replace: ']', '</span>' -}}</div>
					{%- endif -%}

					{%- if button != blank -%}
						<a class="collection-list-button button primary-button" href="{{ section.settings.button_link | default: '#' }}">
							{{- button | replace: '[', '<span class="dynamic-label">' | replace: ']', '</span>' -}}
						</a>
					{%- endif -%}
				</div>
			</div>

			<div class="grid-item second-item">
				{%- for block in section.blocks -%}
					{%- liquid
						assign collection_image   = block.settings.collection.featured_image
						assign prefix_title       = block.settings.prefix
						assign replace_title      = block.settings.collection.title
						assign replace_subheading = block.settings.replace_subheading
						assign replace_heading    = block.settings.replace_heading

						unless collection_image
							for product in block.settings.collection.products
								if product.featured_image
									assign collection_image = product.featured_image

									break
								endif
							endfor
						endunless
					-%}

					<div class="card-item" data-href="{{ block.settings.collection.url }}" data-title="{{ replace_title | escape }}" data-subheading="{{ replace_subheading | escape }}" data-heading="{{ replace_heading | escape }}">
						<div class="card-item-inner">
							<a class="card-link" href="{{ block.settings.collection.url }}" {{ block.shopify_attributes }}>
								<span class="sr-only">{{- replace_title -}}</span>
							</a>

							<div class="card-title">
								{%- if prefix_title != blank -%}
									<span class="prefix-title">{{- prefix_title }}</span>
								{% endif %}

								<span class="collection-title">
									{%- liquid
										if block.settings.collection != blank
											echo replace_title | escape
										else
											echo 'onboarding.collections.title' | t
										endif
									-%}
								</span>
							</div>

							<div class="adapt-media">
								<div class="card-media{% if settings.image_lazy and collection_image != blank %} lazy-image{% endif %}">
									{%- liquid
										if collection_image != blank
											assign image_load = 'eager'

											if forloop.index > 1
												assign image_load = 'lazy'
											endif

											render 'lazy-image', image: collection_image, width: 768, lazy: image_load
										else
											render 'icon', code: 'placeholder'
										endif
									-%}
								</div>
							</div>
						</div>
					</div>
				{%- else -%}
					{%- for i in (1..3) -%}
						<div class="card-item" data-href="#" data-title="{{- 'onboarding.collections.title' | t -}}" {{ block.shopify_attributes }}>
							<div class="card-item-inner">
								<div class="card-title">
									<span class="collection-title">{{ 'onboarding.collections.title' | t }}</span>
								</div>

								<div class="card-media">
									{%- render 'icon', code: 'placeholder' -%}
								</div>
							</div>
						</div>
					{%- endfor -%}
				{%- endfor -%}
			</div>

			{%- if button != blank -%}
				<div class="grid-item hidden-desktop last-item">
					<a class="collection-list-button button primary-button" href="{{ section.settings.button_link | default: '#' }}">
						{{- button | replace: '[', '' | replace: ']', '' -}}
					</a>
				</div>
			{%- endif -%}
		</div>
	</div>
</div>

{% schema %}
{
	"name": "t:sections.collection-sticky.name",
	"tag": "section",
	"class": "collection-sticky-section",
	"disabled_on": {
		"groups": ["header", "footer"]
	},
	"settings": [
		{
			"type": "checkbox",
			"id": "full",
			"default": false,
			"label": "t:general.layout.full.label"
		},
		{
			"type": "color_scheme",
			"id": "color_scheme",
			"label": "t:settings_schema.colors.label",
			"default": "scheme-1"
		},
		{
			"type": "select",
			"id": "layout",
			"default": "layout-1",
			"label": "t:sections.collection-sticky.settings.layout.label",
			"options": [
				{
					"value": "layout-1",
					"label": "t:sections.collection-sticky.settings.layout.option_1.label"
				},
				{
					"value": "layout-2",
					"label": "t:sections.collection-sticky.settings.layout.option_2.label"
				}
			]
		},
		{
			"type": "range",
			"id": "section_margin_top",
			"min": 0,
			"max": 500,
			"step": 5,
			"default": 265,
			"unit": "px",
			"label": "t:sections.collection-sticky.settings.padding.label"
		},
		{
			"type": "range",
			"id": "width",
			"min": 50,
			"max": 70,
			"step": 1,
			"default": 50,
			"unit": "%",
			"label": "t:sections.collection-sticky.settings.width.label"
		},
		{
			"type": "header",
			"content": "t:general.typography.sub_heading.label"
		},
		{
			"type": "richtext",
			"id": "sub_heading_text",
			"label": "t:general.typography.text.label"
		},
		{
			"type": "range",
			"id": "sub_heading_font_size",
			"min": 10,
			"max": 100,
			"step": 1,
			"default": 48,
			"unit": "px",
			"label": "t:general.typography.font_size.label"
		},
		{
			"type": "header",
			"content": "t:general.typography.heading.label"
		},
		{
			"type": "richtext",
			"id": "heading_text",
			"default": "<p>Collection list</p>",
			"label": "t:general.typography.text.label"
		},
		{
			"type": "range",
			"id": "heading_font_size",
			"min": 10,
			"max": 100,
			"step": 1,
			"default": 48,
			"unit": "px",
			"label": "t:general.typography.font_size.label"
		},
		{
			"type": "header",
			"content": "t:general.typography.button.label"
		},
		{
			"type": "text",
			"id": "button_text",
			"default": "Button [label]",
			"label": "t:general.typography.text.label"
		},
		{
			"type": "url",
			"id": "button_link",
			"label": "t:general.typography.link.label"
		},
		{
			"type": "range",
			"id": "button_font_size",
			"min": 10,
			"max": 100,
			"step": 1,
			"default": 16,
			"unit": "px",
			"label": "t:general.typography.font_size.label"
		},
		{
			"type": "color",
			"id": "button_bg_color",
			"label": "t:general.background.color.label"
		},
		{
			"type": "color",
			"id": "button_color",
			"label": "t:general.colors.text.label"
		},
		{
			"type": "header",
			"content": "t:general.padding.header_padding.content"
		},
		{
			"type": "range",
			"id": "padding_top",
			"min": 0,
			"max": 200,
			"step": 2,
			"default": 100,
			"unit": "px",
			"label": "t:general.padding.top.label"
		},
		{
			"type": "range",
			"id": "padding_bottom",
			"min": 0,
			"max": 200,
			"step": 2,
			"default": 150,
			"unit": "px",
			"label": "t:general.padding.bottom.label"
		},
		{
			"type": "paragraph",
			"content": "t:general.padding.paragraph_mobile.content"
		},
		{
			"type": "range",
			"id": "padding_top_mobile",
			"min": 0,
			"max": 100,
			"step": 1,
			"default": 20,
			"unit": "px",
			"label": "t:general.padding.top.label"
		},
		{
			"type": "range",
			"id": "padding_bottom_mobile",
			"min": 0,
			"max": 100,
			"step": 1,
			"default": 90,
			"unit": "px",
			"label": "t:general.padding.bottom.label"
		}
	],
	"blocks": [
		{
			"type": "@app"
		},
		{
			"type": "collection",
			"name": "t:sections.collection-sticky.blocks.collection.name",
			"settings": [
				{
					"type": "collection",
					"id": "collection",
					"label": "t:sections.collection-sticky.blocks.collection.settings.collection.label"
				},
				{
					"type": "text",
					"id": "prefix",
					"label": "t:sections.collection-sticky.blocks.collection.settings.prefix.label"
				},
				{
					"type": "text",
					"id": "replace_subheading",
					"label": "t:sections.collection-sticky.blocks.collection.settings.replace_subheading.label"
				},
				{
					"type": "text",
					"id": "replace_heading",
					"label": "t:sections.collection-sticky.blocks.collection.settings.replace_heading.label"
				}
			]
		}
	],
	"presets": [
		{
			"name": "t:sections.collection-sticky.presets.name",
			"blocks": [
				{
					"type": "collection"
				},
				{
					"type": "collection"
				},
				{
					"type": "collection"
				}
			]
		}
	]
}
{% endschema %}
